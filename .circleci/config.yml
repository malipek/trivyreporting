---
version: 2.1

jobs:
  checkout_code:
    working_directory: ~/repo
    docker:
      - image: docker:stable-git
    steps:
      - checkout
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .

  build_and_push:
    # Image is not persistent, testing should be in the
    # same job as build, to save on pulling the image
    working_directory: ~/repo
    docker:
      - image: docker:stable-git
    steps:
      - setup_remote_docker
      - attach_workspace:
          at: ~/repo
      # restore cache for docker layers and Trivy databases/results
      # to invalidate a cache change version number in key
      - restore_cache:
          keys:
            - v1-{{ .Branch }}
          paths:
            - /caches/repo.tar
            - /tmp/trivy/
      - run:
          name: Load Docker layers from cache
          command: set +o pipefail; docker load -i /caches/repo.tar | true
      - run:
          name: Build Docker, use cache
          command: docker build --cache-from=myapp -t myapp .
      - run:
          name: Create dirs for caches
          command: mkdir -p /caches/ /tmp/trivy/
      - run:
          name: Save Docker layers
          command: docker save -o /caches/repo.tar myapp
      - run:
          name: Install Aquasecurity Trivy
          command: |
            apk add --update-cache --upgrade curl && \
            curl -sfL \
            https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh \
            | sh -s -- -b /usr/local/bin
      - run:
          name: Download JUnit formatter
          command: |
            curl -sfL -o junit.tpl \
            https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/junit.tpl
      - run:
          name: Download HTML formatter
          command: |
            curl -sfL -o html.tpl \
            https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/html.tpl
      - run:
          name: Create dirs for reports
          command: mkdir -p ~/trivy/xml/ ~/trivy/html/
      - run:
          name: Scan image with Trivy, generate JUnit results
          # CRITICAL, HIGH, MEDIUM only
          command: |
            trivy --cache-dir /tmp/trivy/ \
            image --exit-code 0 --no-progress \
            --severity CRITICAL,HIGH,MEDIUM \
            --format template --template "@junit.tpl" \
            -o ~/trivy/xml/trivy-scan.xml myapp
      - run:
          name: Scan image with Trivy, generate HTML artifacts
          # all severities
          command: |
            trivy --cache-dir /tmp/trivy/ \
            image --exit-code 0 --no-progress \
            --format template --template "@html.tpl" \
            -o ~/trivy/html/trivy-scan.html myapp
      - run:
          name: Scan image with Trivy, fail for unfixed MEDIUM or higher
          command: |
            trivy --cache-dir /tmp/trivy/ \
            image --ignore-unfixed --exit-code 1 --no-progress \
            --severity CRITICAL,HIGH,MEDIUM myapp > /dev/null
      - save_cache:
          key: v1-{{ .Branch }}-{{ epoch }}
          paths:
            - /caches/repo.tar
            - /tmp/trivy/
      - store_test_results:
          path: ~/trivy/xml/
      - store_artifacts:
          path: ~/trivy/html/
      - run:
          name: Push image to registry
          # docker login here
          # docker push here
          command: |
            set +o pipefail; docker images

workflows:
  version: 2
  my_workflow:
    jobs:
      - checkout_code
      - build_and_push:
          requires:
            - checkout_code
